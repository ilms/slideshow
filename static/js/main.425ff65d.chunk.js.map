{"version":3,"sources":["missing.png","helpers/Authentication.js","api/E621API.js","api/Post.js","helpers/ThrottleQueue.js","api/E621Searcher.js","components/Field.js","components/E621Filters.js","components/E621Settings.js","components/Card.js","components/Gallery.js","components/ImageCache.js","components/Slideshow.js","api/metatags/Metatag.js","api/filters/Filter.js","api/filters/BlacklistFilter.js","helpers/PostManager.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Authentication","username","apiKey","window","localStorage","setItem","removeItem","getItem","login","api_key","btoa","E621API","_client","authParameters","tags","page","limit","success","failure","params","$","ajax","type","url","data","_getURLAddons","post_id","set_id","setTimeout","error","user","Post","apiJson","this","bypassDefaultBlacklist","md5","substring","fileExtension","size","extension","toLowerCase","_alternatesJson","hasOwnProperty","fileURL","group","_bypassURL","hasSample","alternateSizes","length","Object","keys","getTagsInGroup","ThrottleQueue","ready","queue","fn","push","processQueue","shift","refresh","bind","E621Searcher","_page","_fetching","_finished","callback","request","_fetchSuccess","add","getPosts","posts","i","Field","props","label","other","React","Component","E621Filters","handleTagsChange","handleTagsKey","search","state","className","onChange","onKeyPress","onClick","escape","e","setState","target","value","key","blur","filters","searchCallback","E621Settings","handleLocalChange","handleChange","handleSaveLogin","fetchBlacklist","initialState","fetchSets","close","name","id","checked","avoidAnonBlacklist","userBlacklist","_getSetSelection","prevProps","prevState","sets","owned","maintained","allSets","concat","setID","event","onSettingsChange","storeLogin","setBlacklist","_setBlacklist","getUser","json","getSets","_defaultSets","_getSetSelectionGroup","options","_getSetSelectionOption","Owned","Maintained","Card","post","src","previewURL","alt","Gallery","openSearch","openSettings","prevPage","disabled","nextPage","getCards","cards","postManager","getAllPosts","viewPost","ImageCache","style","display","getImages","images","sampleURL","Slideshow","removeSetText","addSetText","removeFromSet","addToSet","wrapperClassName","getSlideContents","prev","href","link","rel","next","onNewPost","getVideoElement","missing","width","height","poster","controls","getAlternate","Metatag","metatagClass","_metatagClasses","metatag","includes","split","tag","METATAGS","startsWith","Filter","_includesTag","metatags","matches","test","sorted","includeTags","excludeTags","wildcardTags","includeMetatags","excludeMetatags","tagList","_isInvalidTag","excludeTag","_getExcludeTag","wildcardTag","_getWildcardTag","isMetatag","getMetatag","excludeMetatag","BlacklistFilter","blacklist","_lines","_match","blacklistLines","sortedTags","_sortTags","_includesAllTags","_excludesAllTags","_includesAnyTag","_includesAllMetatags","_excludesAllMetatags","PostManager","fetcher","order","pages","pageLocations","currentPostIndex","currentPageIndex","blacklistFilter","lookahead","maxLookahead","validExtensions","Set","_fetch","finished","fetch","_fetchCallback","_addPosts","has","approve","pageIndex","_isPostAllowed","index","postCount","_fetchIfNeeded","pagePosts","allPosts","getPostsByPage","getPostByIndex","preload","postload","minimum","maximum","App","openSlideshow","openGallery","slideshowNext","slideshowPrev","keydownHandler","galleryViewPost","mode","api","settings","currentCache","slideshowPost","which","keyCode","document","addEventListener","removeEventListener","start","getCachePosts","getCurrentPost","update","moveTo","addPostToSet","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.425ff65d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/missing.a7a5b39c.png\";","/**\r\n * This class handles all methods for storing and reading e621\r\n * login credentials for the API\r\n */\r\nclass Authentication {\r\n  /**\r\n   * Stores the login credentials for a user.\r\n   * \r\n   * @param {string} username - The user's username\r\n   * \r\n   * @param {string} apiKey - One of the user's API keys\r\n   */\r\n  static storeLogin(username, apiKey) {\r\n    window.localStorage.setItem('username', username);\r\n    window.localStorage.setItem('api_key', apiKey);\r\n  }\r\n\r\n  /**\r\n   * Removes the currently stored user credentials.\r\n   */\r\n  static removeLogin() {\r\n    window.localStorage.removeItem('username');\r\n    window.localStorage.removeItem('api_key');\r\n  }\r\n\r\n  /**\r\n   * Gets the credentials for authenticating via URL parameters.\r\n   * This method of authentication is not recommended.\r\n   * \r\n   * @returns {AuthParams|Object} \r\n   *          The URL parameters or an empty object if not logged in\r\n   */\r\n  static get authParameters() {\r\n    var username = window.localStorage.getItem('username');\r\n    var apiKey = window.localStorage.getItem('api_key');\r\n    if (username !== null && apiKey !== null) {\r\n      return {login: username, api_key: apiKey};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the request headers for authenticating via HTTP Basic Auth.\r\n   * \r\n   * @returns {AuthHeaders|Object}\r\n   *          The headers or an empty object if not logged in\r\n   */\r\n  static get authHeaders() {\r\n    var username = window.localStorage.getItem('username');\r\n    var apiKey = window.localStorage.getItem('api_key');\r\n    if (username !== null || apiKey !== null) {\r\n      return {'Authorization': 'Basic ' + btoa(username + ':' + apiKey)};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the current users username, or null if not logged in.\r\n   * \r\n   * @returns {string|null} The username\r\n   */\r\n  static get username() {\r\n    return window.localStorage.getItem('username');\r\n  }\r\n}\r\n\r\nexport default Authentication;\r\n\r\n/**\r\n * @typedef {Object} AuthParams\r\n * @property {string} login - The user's username\r\n * @property {string} api_key - One of the user's API keys\r\n */\r\n\r\n/**\r\n * @typedef {Object} AuthHeaders\r\n * @property {string} Authorization - The HTTP basic auth credentials\r\n */\r\n","import $ from 'jquery';\r\n\r\nimport Authentication from '../helpers/Authentication';\r\n\r\n\r\nconst USER_AGENT = \"Ilm's Slideshow/2.0\";\r\n\r\n/**\r\n * This class contains methods for interfacing directly with the e621 API.\r\n */\r\nexport default class E621API {\r\n  /**\r\n   * Returns URL parameters that should be present with every request.\r\n   * This includes the user agent and login credentials.\r\n   * \r\n   * @returns {Object.<string, string>} URL parameters\r\n   */\r\n  static _getURLAddons() {\r\n    // TODO switch to HTTP Basic Auth when possible\r\n    return {\r\n      _client: USER_AGENT,\r\n      ...Authentication.authParameters,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Gets a list of posts. Equivalent to an e621 search.\r\n   * \r\n   * @param {Object} request - The parameters of the request\r\n   * \r\n   * @param {string} request.tags\r\n   *        Follows conventions of the e621 search box\r\n   * \r\n   * @param {number|string} request.page\r\n   *        Page number, or 'b'+post_id or 'a'+post_id for posts\r\n   *        before or after a specific post\r\n   * \r\n   * @param {number|null} request.limit \r\n   *        Number of posts per page (API has hard limit of 320)\r\n   *        or null for user's default (or 75 if not logged in)\r\n   * \r\n   * @param {successCallback} request.success\r\n   *        Callback function to handle successful requests.\r\n   * \r\n   * @param {callback} request.failure\r\n   *        Callback function to handle failed requests.\r\n   */\r\n  static async getPosts({\r\n      tags='', \r\n      page=1, \r\n      limit=null, \r\n      success=()=>{}, \r\n      failure=()=>{},\r\n  }={}) {\r\n    let params = {\r\n      tags: tags,\r\n      page: page,\r\n    };\r\n    if (limit !== null) {\r\n      params['limit'] = limit;\r\n    }\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: 'https://e621.net/posts.json',\r\n      data: {\r\n        ...params,\r\n        ...E621API._getURLAddons(),\r\n      },\r\n      success: success,\r\n      failure: failure,\r\n    });\r\n  }\r\n\r\n  static async addPostToSet({\r\n    post_id=null,\r\n    set_id=null,\r\n    success=()=>{}, \r\n    failure=()=>{},\r\n  }={}) {\r\n    if (post_id === null || set_id === null || set_id === '') {\r\n      setTimeout(() => { failure(); }, 0);\r\n      return;\r\n    }\r\n    let params = {\r\n      'post_ids[]': post_id,\r\n    };\r\n    // TODO add better error handling, i.e. message of issue\r\n    $.ajax({\r\n      type: 'POST',\r\n      url: 'https://e621.net/post_sets/' + set_id + '/add_posts.json',\r\n      data: {\r\n        ...params,\r\n        ...E621API._getURLAddons(),\r\n      },\r\n      success: success,\r\n      failure: failure,\r\n      error: failure,\r\n    });\r\n  }\r\n\r\n  static async getUser({\r\n    user,\r\n    success=()=>{}, \r\n    failure=()=>{},\r\n  }={}) {\r\n    if (!user) {\r\n      setTimeout(() => { failure(); }, 0);\r\n      return;\r\n    }\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: 'https://e621.net/users/' + user + '.json',\r\n      data: E621API._getURLAddons(),\r\n      success: success,\r\n      failure: failure,\r\n    });\r\n  }\r\n\r\n  // TODO write documention - gets sets available to user (owned + managed)\r\n  static async getSets({\r\n    success=()=>{}, \r\n    failure=()=>{},\r\n  }={}) {\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: 'https://e621.net/post_sets/for_select.json',\r\n      data: E621API._getURLAddons(),\r\n      success: success,\r\n      failure: failure,\r\n      error: failure,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Callback function for successful API calls.\r\n * @callback successCallback\r\n * @param {Object} data - The JSON response from the API call\r\n */\r\n","/**\r\n * A wrapper class for posts from the e621 API.\r\n */\r\nexport default class Post {\r\n  /**\r\n   * When true, contentURL, previewURL, and sampleURL will ignore\r\n   * e621's anon blacklist and return their proper URLs.\r\n   */\r\n  static bypassDefaultBlacklist = true;\r\n\r\n  /**\r\n   * Returns the URL for a resource if bypassDefaultBlacklist is true. \r\n   * \r\n   * @param {string} type\r\n   *        '' for file, 'preview/' for preview, 'sample/' for sample\r\n   * \r\n   * @returns {string|null} \r\n   *          The resource URL, or null if bypassDefaultBlacklist is false\r\n   */\r\n  _bypassURL(type) {\r\n    if (!Post.bypassDefaultBlacklist) return null;\r\n    let f1 = this.md5.substring(0, 2);\r\n    let f2 = this.md5.substring(2, 4);\r\n    return 'https://static1.e621.net/data/' + type + f1 + '/' + f2 + \r\n            '/' + this.md5 +'.' + (type !== '' ? 'jpg' : this.fileExtension);\r\n  }\r\n\r\n  /**\r\n   * Creates a Post object from a JSON API result.\r\n   * \r\n   * @param {JSON} post - A single post from the API\r\n   */\r\n  constructor(apiJson) {\r\n    this.apiJson = apiJson;\r\n  }\r\n\r\n  /**\r\n   * The URL linking to the post on e621.net.\r\n   * \r\n   * @type {string} \r\n   */\r\n  get link() {\r\n    return 'https://e621.net/posts/' + this.apiJson['id'];\r\n  }\r\n\r\n  /**\r\n   * The id of the post.\r\n   * \r\n   * @type {number} \r\n   */\r\n  get id() {\r\n    return this.apiJson['id'];\r\n  }\r\n\r\n  /**\r\n   * The MD5 of the file.\r\n   * \r\n   * @type {string}\r\n   */\r\n  get md5() {\r\n    return this.apiJson['file']['md5'];\r\n  }\r\n\r\n  /**\r\n   * The width of the full size file.\r\n   * \r\n   * @type {number}\r\n   */\r\n  get width() {\r\n    return this.apiJson['file']['width'];\r\n  }\r\n\r\n  /**\r\n   * The height of the full size file.\r\n   * \r\n   * @type {number}\r\n   */\r\n  get height() {\r\n    return this.apiJson['file']['height'];\r\n  }\r\n\r\n  /**\r\n   * The size of the original file in bytes.\r\n   * \r\n   * @type {number}\r\n   */\r\n  get fileSize() {\r\n    return this.apiJson['file']['size'];\r\n  }\r\n\r\n  /**\r\n   * The file extension for the full image, video, or flash file.\r\n   * \r\n   * @type {string} \r\n   */\r\n  get fileExtension() {\r\n    return this.apiJson['file']['ext'];\r\n  }\r\n\r\n  /**\r\n   * True when the post is blocked by the anon blacklist.\r\n   * \r\n   * @type {boolean}\r\n   */\r\n  get isBlocked() {\r\n    return this.apiJson['file']['url'] === null;\r\n  }\r\n\r\n  /**\r\n   * The URL for the post's file (full image, original video, or flash file),\r\n   * or null when the post is blocked by the anon blacklist.\r\n   * \r\n   * @type {string|null} \r\n   */\r\n  get fileURL() {\r\n    return this.apiJson['file']['url'] || this._bypassURL('');\r\n  }\r\n\r\n  /**\r\n   * The URL for the post's preview image,\r\n   * or null when the post is blocked by the anon blacklist.\r\n   * \r\n   * All preivews are limited to 150px for width and height.\r\n   * \r\n   * Images have a scaled preview of their original image.\r\n   * Videos have a scaled preview of the first frame.\r\n   * Flash files have a square white image that says 'Flash'.\r\n   * \r\n   * @type {string|null} \r\n   */\r\n  get previewURL() {\r\n    return this.apiJson['preview']['url'] || \r\n            (this.fileExtension === 'swf' ? \r\n              'https://static1.e621.net/images/download-preview.png' : \r\n              this._bypassURL('preview/'));\r\n  }\r\n\r\n  /**\r\n   * True when the post has a sample.\r\n   * \r\n   * @type {boolean} \r\n   */\r\n  get hasSample() {\r\n    return this.apiJson['sample']['has'];\r\n  }\r\n\r\n  /**\r\n   * The URL for the post's sample image,\r\n   * or null when the post is blocked by the anon blacklist.\r\n   * \r\n   * Posts that dont have a sample will return the original file.\r\n   * \r\n   * Images:\r\n   * - Have a preview when full image width excedes 850px.\r\n   * - Preview image is scaled to 850px width.\r\n   * \r\n   * Videos:\r\n   * - Always have previews\r\n   * - Preview image is full scale of first frame.\r\n   * \r\n   * Flash:\r\n   * - Never have previews\r\n   * \r\n   * @type {string|null} \r\n   */\r\n  get sampleURL() {\r\n    return this.apiJson['sample']['url'] || \r\n            this._bypassURL(this.hasSample === true ? 'sample/' : '');\r\n  }\r\n\r\n  /**\r\n   * True when the post has alternate files.\r\n   * \r\n   * @return {boolean}\r\n   */\r\n  get hasAlternates() {\r\n    return this.alternateSizes.length;\r\n  }\r\n\r\n  /**\r\n   * The alternates part of the JSON.\r\n   * \r\n   * @returns {JSON}\r\n   */\r\n  get _alternatesJson() {\r\n    return this.apiJson['sample']['alternates'];\r\n  }\r\n\r\n  /**\r\n   * Array of available alternate file sizes.\r\n   * \r\n   * For videos, the options are:\r\n   * - 'original': The original resolution\r\n   * - '480p': 480p if the original is larger\r\n   * - '720p': 720p if the original is larger\r\n   * \r\n   * @returns {Array.<string>}\r\n   */\r\n  get alternateSizes() {\r\n    return Object.keys(this._alternatesJson);\r\n  }\r\n\r\n  /**\r\n   * Returns the URL for the alternate of the specified size and file type.\r\n   * \r\n   * @param {string} size\r\n   *        The size of the alternate.\r\n   *        \r\n   *        For videos this should be:\r\n   *        - 'original': The original resolution\r\n   *        - '480p': 480p if the original is larger\r\n   *        - '720p': 720p if the original is larger\r\n   * \r\n   * @param {string} extension \r\n   *        The file extension of the alternate \r\n   * \r\n   * @returns {string|null} \r\n   *          The URL to the alternate, or null if not found.\r\n   */\r\n  getAlternate(size, extension) {\r\n    size = size.toLowerCase();\r\n    extension = extension.toLowerCase();\r\n    if (!this._alternatesJson.hasOwnProperty(size)) {\r\n      return null;\r\n    }\r\n    switch (extension) {\r\n      case 'webm':\r\n        return this._alternatesJson[size]['urls'][0] || this.fileURL;\r\n      case 'mp4':\r\n        return this._alternatesJson[size]['urls'][1] || this.fileURL;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The post's score.\r\n   * \r\n   * @returns {number} The score\r\n   */\r\n  get score() {\r\n    return this.apiJson['score']['total'];\r\n  }\r\n\r\n  /**\r\n   * The number of upvotes on the post.\r\n   * \r\n   * @returns {number} The number of upvotes\r\n   */\r\n  get upvotes() {\r\n    return this.apiJson['score']['up'];\r\n  }\r\n\r\n  /**\r\n   * The number of downvotes on the post.\r\n   * \r\n   * @returns {number} The number of downvotes\r\n   */\r\n  get downvotes() {\r\n    return this.apiJson['score']['down'];\r\n  }\r\n\r\n  /**\r\n   * The rating of the post.\r\n   *  - 's': safe\r\n   *  - 'q': questionable\r\n   *  - 'e': explicit\r\n   * \r\n   * @returns {string} A letter representing the rating\r\n   */\r\n  get rating() {\r\n    return this.apiJson['rating'];\r\n  }\r\n\r\n  /**\r\n   * Array of tags on the post.\r\n   * \r\n   * The order of these tags will match those listed on e621.net,\r\n   * with the exception of invalid tags which are moved to the end.\r\n   * \r\n   * @returns {Array.<string>}\r\n   */\r\n  get tags() {\r\n    return [\r\n      ...this.getTagsInGroup('artist'),\r\n      ...this.getTagsInGroup('copyright'),\r\n      ...this.getTagsInGroup('character'),\r\n      ...this.getTagsInGroup('species'),\r\n      ...this.getTagsInGroup('general'),\r\n      ...this.getTagsInGroup('meta'),\r\n      ...this.getTagsInGroup('lore'),\r\n      ...this.getTagsInGroup('invalid'),\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns array of tags in a specific group, or null for invalid groups.\r\n   * \r\n   * Groups names are dependent on the API.\r\n   * \r\n   * Current Groups:\r\n   * - artist\r\n   * - copyright\r\n   * - character\r\n   * - species\r\n   * - general\r\n   * - meta\r\n   * - lore\r\n   * - invalid\r\n   * \r\n   * @returns {Array.<string>|null}\r\n   */\r\n  getTagsInGroup(group) {\r\n    if (!this.apiJson['tags'].hasOwnProperty(group)) {\r\n      return null;\r\n    }\r\n    return this.apiJson['tags'][group];\r\n  }\r\n\r\n  /**\r\n   * The number of favorites for the post.\r\n   * \r\n   * @returns {number} The number of favorites\r\n   */\r\n  get favCount() {\r\n    return this.apiJson['fav_count']; \r\n  }\r\n\r\n  /**\r\n   * The sources of the post.\r\n   * \r\n   * @returns {Array.<string>} Array of URLs\r\n   */\r\n  get sources() {\r\n    return this.apiJson['sources'];\r\n  }\r\n\r\n  /**\r\n   * Array of pool IDs that contain this post.\r\n   * \r\n   * @returns {Array.<number>} Array of pool IDs\r\n   */\r\n  get poolIDs() {\r\n    return this.apiJson['pools'];\r\n  }\r\n\r\n  /**\r\n   * The ID of the parent post, or null if no parent.\r\n   * \r\n   * @returns {number|null} The parent post ID\r\n   */\r\n  get parentID() {\r\n    return this.apiJson['relationships']['parent_id'];\r\n  }\r\n\r\n  /**\r\n   * True when the post has children (including deleted child posts).\r\n   * \r\n   * @returns {boolean} Whether or not the post has children\r\n   */\r\n  get hasChildren() {\r\n    return this.apiJson['relationships']['has_children'];\r\n  }\r\n\r\n  /**\r\n   * True when the post has non-deleted children.\r\n   * \r\n   * @returns {boolean} Whether or not the post has children\r\n   */\r\n  get hasActiveChildren() {\r\n    return this.apiJson['relationships']['has_active_children'];\r\n  }\r\n\r\n  /**\r\n   * Array of child post IDs.\r\n   * \r\n   * @returns {Array.<number>} Array of child post IDs\r\n   */\r\n  get childIDs() {\r\n    return this.apiJson['relationships']['children'];\r\n  }\r\n\r\n  /**\r\n   * Returns the description of the post.\r\n   * \r\n   * @returns {string} The post description\r\n   */\r\n  get description() {\r\n    return this.apiJson['description']\r\n  }\r\n\r\n  /**\r\n   * The number of comments on the post.\r\n   * \r\n   * @returns {number} Number of comments\r\n   */\r\n  get commentCount() {\r\n    return this.apiJson['comment_count'];\r\n  }\r\n\r\n  /**\r\n   * True when the current user has favorited the post.\r\n   * \r\n   * @returns {boolean} Whether or not the post is favorited\r\n   */\r\n  get favorited() {\r\n    return this.apiJson['is_favorited'];\r\n  }\r\n\r\n  /**\r\n   * Duration of the video in seconds, or null for non-videos.\r\n   * \r\n   * @returns {number|null} Duration of video in seconds\r\n   */\r\n  get duration() {\r\n    return this.apiJson['duration'];\r\n  }\r\n}\r\n","// Allows functions to be called at a throttled rate\r\nexport class ThrottleQueue {\r\n  constructor (limit = 1000) {\r\n    this.limit = limit;\r\n    this.ready = true;\r\n    this.queue = [];\r\n  }\r\n\r\n  // Adds a function to the queue\r\n  add(fn) {\r\n    this.queue.push(fn);\r\n    this.processQueue();\r\n  }\r\n\r\n  // Calls the oldest function from the queue, if one exists \r\n  processQueue() {\r\n    if (this.queue.length > 0 && this.ready) {\r\n      this.ready = false;\r\n      this.queue.shift()();\r\n      setTimeout(this.refresh.bind(this), this.limit);\r\n    }\r\n  }\r\n\r\n  // Called when the cooldown finishes, processes next function\r\n  refresh() {\r\n    this.ready = true;\r\n    this.processQueue();\r\n  }\r\n}\r\n\r\nexport default ThrottleQueue;\r\n","import E621API from './E621API';\r\nimport Post from './Post';\r\nimport ThrottleQueue from '../helpers/ThrottleQueue';\r\n\r\n\r\n/**\r\n * This class \r\n */\r\nexport default class E621Searcher {\r\n  static queue = new ThrottleQueue(1000);\r\n\r\n  constructor(tags) {\r\n    this.tags = tags;\r\n    this.limit = 100;\r\n    this._page = 1;\r\n    this._fetching = false;\r\n    this._finished = false;\r\n  }\r\n\r\n  fetch(callback) {\r\n    if (this._finished === true) {\r\n      setTimeout(() => { callback([]); }, 0);\r\n      return true;\r\n    } else if (this._fetching === true) {\r\n      return false;\r\n    } else {\r\n      this._fetching = true;\r\n      let request = {\r\n        tags: this.tags,\r\n        page: this._page,\r\n        limit: this.limit,\r\n        success: this._fetchSuccess.bind(this, callback),\r\n      }\r\n      E621Searcher.queue.add(function() {\r\n        E621API.getPosts(request);\r\n      });\r\n      this._page++;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  _fetchSuccess(callback, data) {\r\n    this._fetching = false;\r\n    if (data['posts'].length === 0) {\r\n      this._finished = true;\r\n      callback([]);\r\n    } else {\r\n      let posts = [];\r\n      for (let i = 0; i < data['posts'].length; ++i) {\r\n        posts.push(new Post(data['posts'][i]));\r\n      }\r\n      callback(posts);\r\n    }\r\n  }\r\n\r\n  get finished() {\r\n    return this._finished;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nclass Field extends React.Component {\r\n  render() {\r\n    let {label, ...other} = this.props;\r\n    return (\r\n      <>\r\n        <h2>{label}</h2>\r\n        <input {...other} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\n\r\nimport Field from './Field';\r\n\r\nimport './E621Filters.css';\r\n\r\n\r\nclass E621Filters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTagsChange = this.handleTagsChange.bind(this);\r\n    this.handleTagsKey = this.handleTagsKey.bind(this);\r\n    this.search = this.search.bind(this);\r\n    // TODO fix fields not filling with old data\r\n    this.state = {tags: ''};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form filter-form\">\r\n        <Field label=\"Tags\" type=\"text\" \r\n               onChange={this.handleTagsChange} \r\n               onKeyPress={this.handleTagsKey} />\r\n        <button onClick={this.search}>\r\n          Search\r\n        </button>\r\n        <button onClick={this.props.escape}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleTagsChange(e) {\r\n    this.setState({ tags: e.target.value });\r\n  }\r\n\r\n  handleTagsKey(e) {\r\n    if (e.key === 'Enter') {\r\n      e.target.blur();\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  search() {\r\n    let filters = {\r\n      tags: this.state.tags\r\n    };\r\n    this.props.searchCallback(filters);\r\n  }\r\n}\r\n\r\nexport default E621Filters;\r\n","import React from 'react';\r\nimport Authentication from '../helpers/Authentication';\r\n\r\nimport E621API from '../api/E621API';\r\nimport Field from './Field';\r\n\r\n\r\nclass E621Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLocalChange = this.handleLocalChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSaveLogin = this.handleSaveLogin.bind(this);\r\n    this.fetchBlacklist = this.fetchBlacklist.bind(this);\r\n    this.state = E621Settings.initialState;\r\n    this.fetchBlacklist();\r\n    this.fetchSets();\r\n  }\r\n\r\n  static get initialState() {\r\n    return {\r\n      username: '',\r\n      apiKey: '',\r\n      userBlacklist: '',\r\n      avoidAnonBlacklist: false,\r\n      setID: '',\r\n      sets: E621Settings._defaultSets(),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form settings-form\">\r\n        <button onClick={this.props.close}>\r\n          Close Settings\r\n        </button>\r\n        <Field label=\"Username\" type=\"text\" \r\n               name=\"username\" value={this.state.username}\r\n               onChange={this.handleLocalChange} />\r\n        <Field label=\"API Key\" type=\"password\" \r\n               name=\"apiKey\" value={this.state.apiKey}\r\n               onChange={this.handleLocalChange} />\r\n        <button id=\"e621-save-login-button\" onClick={this.handleSaveLogin}>\r\n          Store Login Locally\r\n        </button>\r\n        <Field label=\"Avoid Anon Blacklist\" type=\"checkbox\" \r\n               name=\"avoidAnonBlacklist\" checked={this.state.avoidAnonBlacklist}\r\n               onChange={this.handleChange} />\r\n        <h2>Blacklist</h2>\r\n        <button id=\"fetch-user-blacklist-button\" onClick={this.fetchBlacklist}>\r\n          Get blacklist\r\n        </button>\r\n        <textarea name=\"userBlacklist\" value={this.state.userBlacklist}\r\n               onChange={this.handleChange} />\r\n        <h2>Selected Set</h2>\r\n        {this._getSetSelection()}\r\n        <button onClick={this.props.close}>\r\n          Close Settings\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Because React does not auto update on select option changes\r\n    if (prevState.sets !== this.state.sets) {\r\n      // Select the first element of the available sets\r\n      let owned = this.state.sets['Owned'];\r\n      let maintained = this.state.sets['Maintained'];\r\n      let allSets = owned.concat(maintained);\r\n      if (allSets.length > 0) {\r\n        this.setState({setID: allSets[0][1]});\r\n      } else {\r\n        this.setState({setID: \"\"});\r\n      }\r\n    }\r\n  }\r\n\r\n  handleLocalChange(event) {\r\n    let target = event.target;\r\n    let value = target.type === 'checkbox' ? target.checked : target.value;\r\n    this.setState({[target.name]: value});\r\n  }\r\n\r\n  handleChange(event) {\r\n    let target = event.target;\r\n    let value = target.type === 'checkbox' ? target.checked : target.value;\r\n    this.setState({[target.name]: value});\r\n    this.props.onSettingsChange({[target.name]: value});\r\n  }\r\n\r\n  handleSaveLogin() {\r\n    Authentication.storeLogin(this.state.username, this.state.apiKey);\r\n    this.setState({ username: '', apiKey: '' });\r\n    this.fetchBlacklist();\r\n    this.fetchSets();\r\n  }\r\n\r\n  fetchBlacklist() {\r\n    let setBlacklist = this._setBlacklist.bind(this);\r\n    let username = Authentication.username;\r\n    E621API.getUser({\r\n      user: username,\r\n      success: (json) => {\r\n        if (json.hasOwnProperty('blacklisted_tags')) {\r\n          setBlacklist(json['blacklisted_tags']);\r\n        } else {\r\n          setBlacklist('(error_not_logged_in:' + username + ')');\r\n        }\r\n      },\r\n      failure: () => {\r\n        setBlacklist('(error_invalid_user:' + username + ')');\r\n      },\r\n    });\r\n  }\r\n\r\n  _setBlacklist(value) {\r\n    this.setState({userBlacklist: value});\r\n    this.props.onSettingsChange({userBlacklist: value});\r\n  }\r\n\r\n  fetchSets() {\r\n    let setState = this.setState.bind(this);\r\n    E621API.getSets({\r\n      success: (json) => { setState({sets: json}); },\r\n      failure: () => { setState({sets: E621Settings._defaultSets()}); },\r\n    });\r\n  }\r\n\r\n  static _defaultSets() {\r\n    return {Owned: [], Maintained: []};\r\n  }\r\n\r\n  _getSetSelection() {\r\n    return (\r\n      <select name=\"setID\" value={this.state.setID}\r\n              onChange={this.handleChange}>\r\n        <optgroup label=\"Owned\">\r\n          {this._getSetSelectionGroup(this.state.sets['Owned'])}\r\n        </optgroup>\r\n        <optgroup label=\"Maintained\">\r\n          {this._getSetSelectionGroup(this.state.sets['Maintained'])}\r\n        </optgroup>\r\n      </select>\r\n    );\r\n  }\r\n\r\n  _getSetSelectionGroup(group) {\r\n    let options = [];\r\n    for (let i = 0; i < group.length; ++i) {\r\n      options.push(this._getSetSelectionOption(group[i][0], group[i][1]));\r\n    }\r\n    return options;\r\n  }\r\n\r\n  _getSetSelectionOption(name, id) {\r\n    return <option value={id} key={id}>{name}</option>;\r\n  }\r\n}\r\n\r\nexport default E621Settings;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n    let className = 'card';\r\n    className += ' content-type-' + this.props.post.fileExtension;\r\n    return (\r\n      <div className={className}>\r\n        <button onClick={this.props.callback}>\r\n          <img src={this.props.post.previewURL} alt=\"\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nimport './Gallery.css';\r\n\r\n\r\nclass Gallery extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"gallery\">\r\n        <div className=\"gallery-controls\">\r\n          <button onClick={this.props.openSearch}>Search</button>\r\n          <button onClick={this.props.openSettings}>Settings</button>\r\n        </div>\r\n        <div className=\"gallery-controls\">\r\n          <button onClick={this.props.prevPage} disabled={!this.props.prevPage}>Prev Page</button>\r\n          <button onClick={this.props.nextPage} disabled={!this.props.nextPage}>Next Page</button>\r\n        </div>\r\n        <div className=\"gallery-content\">\r\n          {this.getCards()}\r\n        </div>\r\n        <div className=\"gallery-controls\">\r\n          <button onClick={this.props.prevPage} disabled={!this.props.prevPage}>Prev Page</button>\r\n          <button onClick={this.props.nextPage} disabled={!this.props.nextPage}>Next Page</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getCards() {\r\n    let cards = [];\r\n    if (this.props.postManager) {\r\n      let posts = this.props.postManager.getAllPosts();\r\n      for (let i = 0; i < posts.length; i++) {\r\n        cards.push(\r\n          <Card key={posts[i].id}\r\n                post={posts[i]} \r\n                callback={() => {this.props.viewPost(i)}} />\r\n        );\r\n      }\r\n    }\r\n    return cards;\r\n  }\r\n}\r\n\r\nexport default Gallery\r\n","import React from 'react';\r\n\r\n\r\nexport class ImageCache extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{display: \"none\"}}>\r\n        {this.getImages(this.props.posts)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getImages(posts) {\r\n    let images = [];\r\n    for (let i = 0; i < posts.length; i++) {\r\n      images.push(<img key={posts[i].id} alt=\"\"\r\n        src={posts[i].fileExtension === 'webm' ? \r\n              posts[i].sampleURL : posts[i].fileURL}/>)\r\n    }\r\n    return images;\r\n  }\r\n}\r\n\r\nexport default ImageCache;\r\n","import React from 'react';\r\n\r\nimport './Slideshow.css';\r\nimport missing from '../missing.png';\r\n\r\n\r\nexport class Slideshow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      removeSetText: '➖',\r\n      addSetText: '➕',\r\n    }\r\n    this.removeFromSet = this.removeFromSet.bind(this);\r\n    this.addToSet = this.addToSet.bind(this);\r\n  }\r\n\r\n  render() {\r\n    let wrapperClassName = 'slide-wrapper';\r\n    if (this.props.post) {\r\n      wrapperClassName += ' content-type-' + this.props.post.fileExtension;\r\n    }\r\n    return (\r\n      <div className={wrapperClassName}>\r\n        <div className=\"slide\">\r\n          {this.getSlideContents()}\r\n        </div>\r\n        <div className=\"slide-controls\">\r\n          <button className=\"prev-button\" onClick={this.props.prev}>Previous</button>\r\n          <button className=\"escape-button\" onClick={this.props.escape}>Close</button>\r\n          <a className=\"source-button\" href={this.props.post ? this.props.post.link : null} \r\n             target=\"_blank\" rel=\"noopener noreferrer\">Link</a>\r\n          <button className=\"next-button\" onClick={this.props.next}>Next</button>\r\n        </div>\r\n        <div className=\"slide-controls-extra\">\r\n          <button className=\"add-set-button\" onClick={this.addToSet}>\r\n            {this.state.addSetText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onNewPost();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.post !== this.props.post) {\r\n      this.onNewPost();\r\n    }\r\n  }\r\n\r\n  onNewPost() {\r\n    this.setState({\r\n      removeSetText: '➖',\r\n      addSetText: '➕',\r\n    });\r\n  }\r\n\r\n  removeFromSet() {\r\n    // TODO\r\n  }\r\n\r\n  addToSet() {\r\n    let setState = this.setState.bind(this);\r\n    setState({addSetText: '🔄'});\r\n    this.props.addToSet({\r\n      success: () => { setState({addSetText: '✔️'}); }, \r\n      failure: () => { setState({addSetText: '❌'}); }, \r\n    });\r\n  }\r\n\r\n  getSlideContents() {\r\n    if (this.props.post) {\r\n      switch(this.props.post.fileExtension) {\r\n        case 'jpg':\r\n        case 'png':\r\n        case 'gif':\r\n          return <img className=\"current-image\" key={this.props.post.id}\r\n                      src={this.props.post.fileURL} alt=\"\" />;\r\n        case 'webm':\r\n          return this.getVideoElement();\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return <img className=\"current-image\" src={missing} alt=\"\" />;\r\n  }\r\n\r\n  getVideoElement() {\r\n    return (\r\n      <video className=\"current-video\" key={this.props.post.id}\r\n             width={this.props.post.width}\r\n             height={this.props.post.height} \r\n             poster={this.props.post.sampleURL} controls>\r\n        <source src={this.props.post.getAlternate('original', 'webm')} \r\n                type=\"video/webm\" />\r\n        <source src={this.props.post.getAlternate('original', 'mp4')} \r\n                type=\"video/mp4\" />\r\n        Your browser does not support the video tag, \r\n        or cannot handle webm or mp4 files.\r\n      </video>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slideshow;\r\n","import Post from '../Post';\r\n\r\n\r\n/**\r\n * Base class for e621 metatags.\r\n */\r\nexport default class Metatag {\r\n  static _metatagClasses = {};\r\n\r\n  /**\r\n   * Verifies that the metatag matches for the post.\r\n   * \r\n   * @param {Post} post The post\r\n   * \r\n   * @returns {boolean} A match of the metatag\r\n   */\r\n  matches(post) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * The metatag's text name on e621\r\n   */\r\n  static get name() {\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Returns the string form of the metatag.\r\n   * \r\n   * @returns {string} The metatag as a string\r\n   */\r\n  toString() {\r\n    return '';\r\n  }\r\n\r\n  static _registerMetatagClass(metatagClass) {\r\n    Metatag._metatagClasses[metatagClass.name] = metatagClass; \r\n  }\r\n\r\n  /**\r\n   * Returns a metatag from its text form, or null if invalid.\r\n   * \r\n   * @param {string} metatag The metatag in text form\r\n   */\r\n  static getMetatag(metatag) {\r\n    if (!metatag.includes(':')) return null;\r\n    let [name,value] = metatag.split(':', 1);\r\n    if (Metatag._metatagClasses.hasOwnProperty(name)) {\r\n      return new Metatag._metatagClasses[name](value);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns true when the tag is a metatag\r\n   * \r\n   * @param {string} tag \r\n   * \r\n   * @return {boolean}\r\n   */\r\n  static isMetatag(tag) {\r\n    for (let i = 0; i < METATAGS.length; ++i) {\r\n      if (tag.startsWith(METATAGS[i] + ':')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nconst METATAGS = [\r\n  // User-Based\r\n  'user',\r\n  'favoritedby',\r\n  'voted',\r\n  'votedup',\r\n  'voteddown',\r\n  'approvedby',\r\n  'deletedby',\r\n  // Post-Based\r\n  // Counts\r\n  'id',\r\n  'score',\r\n  'favcount',\r\n  'comment_count',\r\n  'tagcount',\r\n  'gentags',\r\n  'arttags',\r\n  'chartags',\r\n  'copytags',\r\n  'spectags',\r\n  'invtags',\r\n  // Image Size\r\n  'width',\r\n  'height',\r\n  'mpixels',\r\n  'ratio',\r\n  'filesize',\r\n  // Video Duration\r\n  'duration',\r\n  // Dates\r\n  'date',\r\n  // Rating\r\n  'rating',\r\n  // File Types\r\n  'type',\r\n  // Text Searching\r\n  'source',\r\n  'description',\r\n  'notes',\r\n  'delreason',\r\n  // Parents and Children\r\n  'ischild',\r\n  'isparent',\r\n  'parent',\r\n  // Status\r\n  'status',\r\n  // Other\r\n  'hassource',\r\n  'hasdescription',\r\n  'ratinglocked',\r\n  'notelocked',\r\n  'hideanon',\r\n  'hidegoogle',\r\n  'inpool',\r\n  'pool',\r\n  'set',\r\n  'md5',\r\n  // Sorting\r\n  'order',\r\n];\r\n","import Metatag from '../metatags/Metatag';\r\nimport Post from '../Post';\r\n\r\n\r\n/**\r\n * Filters are classes that approve or reject posts, \r\n * such as a blacklist or list of search tags.\r\n */\r\nexport default class Filter {\r\n  /**\r\n   * Approves a post when matching a certain criteria.\r\n   * \r\n   * @param {Post} post The post to approve\r\n   * \r\n   * @returns {boolean} Whether or not the post is approved\r\n   */\r\n  approve(post) {\r\n    return true;\r\n  }\r\n\r\n  static _includesTag(post, tag) {\r\n    return post.tags.includes(tag);\r\n  }\r\n\r\n  static _includesAllTags(post, tags) {\r\n    for (let i = 0; i < tags.length; ++i) {\r\n      if (!this._includesTag(post, tags[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static _excludesAllTags(post, tags) {\r\n    for (let i = 0; i < tags.length; ++i) {\r\n      if (this._includesTag(post, tags[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static _includesAnyTag(post, tags) {\r\n    if (tags.length === 0) return true;\r\n    for (let i = 0; i < tags.length; ++i) {\r\n      if (this._includesTag(post, tags[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static _includesAllMetatags(post, metatags) {\r\n    for (let i = 0; i < metatags.length; ++i) {\r\n      if (!metatags[i].matches(post)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static _excludesAllMetatags(post, metatags) {\r\n    for (let i = 0; i < metatags.length; ++i) {\r\n      if (metatags[i].matches(post)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static _getExcludeTag(tag) {\r\n    if (tag.startsWith('-') && tag.length > 1) {\r\n      return tag.substring(1);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static _getWildcardTag(tag) {\r\n    if (tag.startsWith('~') && tag.length > 1) {\r\n      return tag.substring(1);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static _isInvalidTag(tag) {\r\n    if (tag === '') return true;\r\n    if (tag === '-') return true;\r\n    if (tag === '~') return true;\r\n    if (/[%,#\\\\* ]/.test(tag)) return true;\r\n    return false;\r\n  }\r\n\r\n  static _sortTags(tags) {\r\n    let sorted = {\r\n      includeTags: [],\r\n      excludeTags: [],\r\n      wildcardTags: [],\r\n      includeMetatags: [],\r\n      excludeMetatags: [],\r\n    }\r\n    let tagList = tags.split(/\\s+/);\r\n    for (let i = 0; i < tagList.length; i++) {\r\n      if (Filter._isInvalidTag(tagList[i])) continue;\r\n      let excludeTag = Filter._getExcludeTag(tagList[i]);\r\n      if (excludeTag !== null) {\r\n        if (Metatag.isMetatag(excludeTag)) {\r\n          let excludeMetatag = Metatag.getMetatag(excludeTag);\r\n          if (excludeMetatag !== null) {\r\n            sorted['excludeMetatags'].push(excludeMetatag);\r\n            continue;\r\n          } else {\r\n            // ignore invalid/unimplemented metatags\r\n            continue;\r\n          }\r\n        } else {\r\n          sorted['excludeTags'].push(excludeTag);\r\n          continue;\r\n        }\r\n      }\r\n      let wildcardTag = Filter._getWildcardTag(tagList[i]);\r\n      if (wildcardTag !== null) {\r\n        sorted['wildcardTags'].push(wildcardTag);\r\n        continue;\r\n      }\r\n      if (Metatag.isMetatag(tagList[i])) {\r\n        let metatag = Metatag.getMetatag(tagList[i]);\r\n        if (metatag !== null) {\r\n          sorted['includeMetatags'].push(metatag);\r\n          continue;\r\n        } else {\r\n          // ignore invalid/unimplemented metatags\r\n          continue;\r\n        }\r\n      }\r\n      sorted['includeTags'].push(tagList[i]);\r\n    }\r\n    return sorted;\r\n  }\r\n}\r\n","import Filter from './Filter';\r\nimport Post from '../../api/Post';\r\n\r\n\r\n/**\r\n * Filter that verifies that posts pass a blacklist.\r\n */\r\nexport default class BlacklistFilter extends Filter {\r\n  /**\r\n   * Creates a new BlacklistFilter for a blacklist\r\n   * \r\n   * @param {string} blacklist Blacklist as formatted in user setting\r\n   */\r\n  constructor(blacklist) {\r\n    super();\r\n    this.blacklist = blacklist;\r\n  }\r\n\r\n  // /**\r\n  //  * The current blacklist\r\n  //  */\r\n  // get blacklist() {\r\n  //   return this._blacklist;\r\n  // }\r\n\r\n  /**\r\n   * The current blacklist\r\n   */\r\n  set blacklist(blacklist) {\r\n    // TODO change to linewise additions\r\n    this._lines = [];\r\n    let blacklistLines = blacklist.split(/\\n+/);\r\n    for (let i = 0; i < blacklistLines.length; ++i) {\r\n      let sortedTags = Filter._sortTags(blacklistLines[i]);\r\n      if (sortedTags['includeTags'].length !== 0\r\n          && sortedTags['excludeTags'].length !== 0\r\n          && sortedTags['wildcardTags'].length !== 0\r\n          && sortedTags['includeMetatags'].length !== 0\r\n          && sortedTags['excludeMetatags'].length !== 0) {\r\n        this._lines.push(sortedTags);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true when the post is allowed by the blacklist\r\n   * \r\n   * @param {Post} post - The post to approve\r\n   * \r\n   * @returns {boolean} True when the post is allowed by the blacklist\r\n   */\r\n  approve(post) {\r\n    for (let i = 0; i < this._lines.length; ++i) {\r\n      if (BlacklistFilter._match(post, this._lines[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static _match(post, sortedTags) {\r\n    return Filter._includesAllTags(post, sortedTags['includeTags']) &&\r\n            Filter._excludesAllTags(post, sortedTags['excludeTags']) &&\r\n            Filter._includesAnyTag(post, sortedTags['wildcardTags']) &&\r\n            Filter._includesAllMetatags(post, sortedTags['includeMetatags']) &&\r\n            Filter._excludesAllMetatags(post, sortedTags['excludeMetatags']);\r\n  }\r\n}\r\n","import BlacklistFilter from '../api/filters/BlacklistFilter';\r\n\r\n\r\nexport class PostManager {\r\n  constructor(fetcher, blacklist) {\r\n    this.fetcher = fetcher;\r\n    this.posts = {};\r\n    this.order = [];\r\n    this.pages = [];\r\n    this.pageLocations = {};\r\n    this.currentPostIndex = null;\r\n    this.currentPageIndex = null;\r\n    this.blacklistFilter = new BlacklistFilter(blacklist);\r\n    this.lookahead = false; // PostManager will automatically get pages\r\n    this.maxLookahead = 2000; // Max posts grabbed automatically before stopping\r\n    // TODO manage extensions per platform\r\n    // e621Extensions = new Set(['png','jpg','gif'])\r\n    // faExtensions = new Set(['png','jpg','jpeg','gif','bmp'])\r\n    this.validExtensions = new Set(['png','jpg','gif','webm']);\r\n  }\r\n\r\n  empty() {\r\n    this.posts = {};\r\n    this.order = [];\r\n    this.pages = [];\r\n    this.pageLocations = {};\r\n    this.currentPostIndex = null;\r\n    this.currentPageIndex = null;\r\n  }\r\n\r\n  /**\r\n   * Starts searching for posts.\r\n   * \r\n   * @param {CallableFunction} callback \r\n   *               Called with true when posts were found, false otherwise.\r\n   *               This can return true while no posts are present if they \r\n   *               are all blacklisted or flash files. \r\n   */\r\n  start(callback = () => {}) {\r\n    this._fetch(callback);\r\n  }\r\n\r\n  /**\r\n   * Fetches the next page of posts\r\n   * \r\n   * @param {CallableFunction} callback \r\n   *               Called with true when posts were found, false otherwise.\r\n   *               This can return true while no posts are present if they \r\n   *               are all blacklisted or flash files. \r\n   */\r\n  _fetch(callback = () => {}) {\r\n    if (this.fetcher.finished === false) {\r\n      this.fetcher.fetch(this._fetchCallback.bind(this, callback));\r\n    }\r\n  }\r\n\r\n  _fetchIfNeeded() {\r\n    if (this.currentPostIndex === null) return;\r\n    if (this.currentPostIndex >= this.order.length - 20) {\r\n      // || this.currentPageIndex >= this.pages.length - 1) {\r\n      this._fetch();\r\n    }\r\n  }\r\n\r\n  _fetchCallback(callback, posts) {\r\n    if (posts.length === 0) {\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n    } else {\r\n      this._addPosts(posts);\r\n      if (callback) {\r\n        callback(true);\r\n      }\r\n      if (this.lookahead) {\r\n        if (this.order.length < this.maxLookahead) {\r\n          this._fetch();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _isPostAllowed(post) {\r\n    if (!this.validExtensions.has(post.fileExtension)) return false;\r\n    if (!this.blacklistFilter.approve(post)) return false;\r\n    return true;\r\n  }\r\n\r\n  _addPosts(posts) {\r\n    let page = [];\r\n    let pageIndex = this.pages.length;\r\n    for (let i = 0; i < posts.length; i++) {\r\n      let post = posts[i];\r\n      if (this._isPostAllowed(post)) {\r\n        this.posts[post.id] = post;\r\n        this.order.push(post.id);\r\n        page.push(post.id);\r\n        this.pageLocations[post.id] = pageIndex;\r\n      }\r\n    }\r\n    this.pages.push(page);\r\n  }\r\n\r\n  moveToStart() {\r\n    this.currentPostIndex = 0;\r\n  }\r\n\r\n  moveTo(index) {\r\n    this.currentPostIndex = index;\r\n  }\r\n\r\n  next() {\r\n    if (this.currentPostIndex !== null) {\r\n      this.currentPostIndex++;\r\n      var postCount = this.order.length\r\n      if (this.currentPostIndex >= postCount){\r\n        if (postCount > 0) {\r\n          this.currentPostIndex = postCount - 1;\r\n        } else {\r\n          this.currentPostIndex = 0;\r\n        }\r\n        return false;\r\n      }\r\n      this._fetchIfNeeded();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    if (this.currentPostIndex !== null) {\r\n      this.currentPostIndex--;\r\n      if (this.currentPostIndex < 0){\r\n        this.currentPostIndex = 0;\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  getPostById(id) {\r\n    return this.posts[id];\r\n  }\r\n\r\n  getPostByIndex(index) {\r\n    return this.posts[this.order[index]];\r\n  }\r\n\r\n  getPostsByPage(pageIndex) {\r\n    if (pageIndex < 0 || pageIndex > this.pages.length) return [];\r\n    let pagePosts = [];\r\n    for (let i = 0; i < this.pages[pageIndex].length; ++i) {\r\n      pagePosts.push(this.posts[this.pages[pageIndex][i]]);\r\n    }\r\n    return pagePosts;\r\n  }\r\n\r\n  getAllPosts() {\r\n    let allPosts = [];\r\n    for (let i = 0; i < this.order.length; i++) {\r\n      allPosts.push(this.posts[this.order[i]]);\r\n    }\r\n    return allPosts;\r\n  }\r\n\r\n  getAllPages() {\r\n    let pages = [];\r\n    for (let i = 0; i < this.pages.length; ++i) {\r\n      pages.push(this.getPostsByPage(i));\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  getCurrentPost() {\r\n    return this.currentPostIndex !== null ? this.getPostByIndex(this.currentPostIndex) : null;\r\n  }\r\n\r\n  getCachePosts(preload, postload) {\r\n    let posts = [];\r\n    if (this.currentPostIndex !== null) {\r\n      let minimum = this.currentPostIndex - postload;\r\n      let maximum = this.currentPostIndex + preload;\r\n      if (minimum < 0) {\r\n          minimum = 0;\r\n      }\r\n      if (maximum >= this.order.length) {\r\n          maximum = this.order.length - 1;\r\n      }\r\n      for (let i = minimum; i <= maximum; i++) {\r\n          posts.push(this.getPostByIndex(i));\r\n      }\r\n    }\r\n    return posts;\r\n  }\r\n}\r\n\r\nexport default PostManager;\r\n","import React from 'react';\r\n\r\nimport E621API from '../api/E621API';\r\nimport E621Searcher from '../api/E621Searcher';\r\nimport E621Filters from './E621Filters';\r\nimport E621Settings from './E621Settings';\r\nimport Gallery from './Gallery';\r\nimport ImageCache from './ImageCache';\r\nimport Slideshow from './Slideshow';\r\nimport PostManager from '../helpers/PostManager';\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.search = this.search.bind(this);\r\n    this.searchCallback = this.searchCallback.bind(this);\r\n    this.openSlideshow = this.openSlideshow.bind(this);\r\n    this.openGallery = this.openGallery.bind(this);\r\n    this.slideshowNext = this.slideshowNext.bind(this);\r\n    this.slideshowPrev = this.slideshowPrev.bind(this);\r\n    this.keydownHandler = this.keydownHandler.bind(this);\r\n    this.openSearch = this.openSearch.bind(this);\r\n    this.openSettings = this.openSettings.bind(this);\r\n    this.galleryViewPost = this.galleryViewPost.bind(this);\r\n    this.addToSet = this.addToSet.bind(this);\r\n    this.onSettingsChange = this.onSettingsChange.bind(this);\r\n    this.state = {\r\n      mode: 'search',\r\n      api: 'e621',\r\n      settings: E621Settings.initialState,\r\n      currentCache: [],\r\n      slideshowPost: null,\r\n      posts: [],\r\n      postManager: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={this.state.mode === 'search' ? 'mount show' : 'mount'}>\r\n          <E621Filters searchCallback={this.search} \r\n                       escape={this.openGallery} />\r\n        </div>\r\n        <div className={this.state.mode === 'slideshow' ? 'mount show' : 'mount'}>\r\n          <Slideshow post={this.state.slideshowPost}\r\n                     next={this.slideshowNext}\r\n                     prev={this.slideshowPrev}\r\n                     escape={this.openGallery}\r\n                     addToSet={this.addToSet} />\r\n        </div>\r\n        <div className={this.state.mode === 'gallery' ? 'mount show' : 'mount'}>\r\n          <Gallery postManager={this.state.postManager}\r\n                   openSearch={this.openSearch}\r\n                   openSettings={this.openSettings}\r\n                   viewPost={this.galleryViewPost} />\r\n        </div>\r\n        <div className={this.state.mode === 'settings' ? 'mount show' : 'mount'}>\r\n          <E621Settings close={this.openGallery} \r\n                        onSettingsChange={this.onSettingsChange} />\r\n        </div>\r\n        <ImageCache posts={this.state.currentCache} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  keydownHandler(e) {\r\n    if (this.state.mode === 'slideshow') {\r\n      var key = e.which || e.keyCode;\r\n      \r\n      switch (key) {\r\n        case 37: // Left arrow\r\n        case 65: // A\r\n          this.slideshowPrev();\r\n          return;\r\n        case 39: // Right arrow\r\n        case 68: // D\r\n          this.slideshowNext();\r\n          return;\r\n        default: return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidMount() { \r\n    document.addEventListener('keydown', this.keydownHandler);\r\n  }\r\n\r\n  componentWillUnmount() { \r\n    document.removeEventListener('keydown', this.keydownHandler);\r\n  }\r\n\r\n  search(filters) {\r\n    // TODO pass proper settings\r\n    let settings = {limit: 30};\r\n    let postManager = new PostManager(\r\n      new E621Searcher(filters.tags, settings.limit),\r\n      this.state.settings.userBlacklist,\r\n    );\r\n    postManager.start(this.searchCallback);\r\n    this.setState({\r\n      mode: 'gallery',\r\n      postManager: postManager,\r\n    });\r\n  }\r\n\r\n  update() {\r\n    // TODO configure cache size with settings\r\n    this.setState({\r\n      posts: this.state.postManager.getAllPosts(),\r\n      currentCache: this.state.postManager.getCachePosts(10, 5),\r\n      slideshowPost: this.state.postManager.getCurrentPost(),\r\n    });\r\n  }\r\n\r\n  searchCallback() {\r\n    this.update();\r\n  }\r\n\r\n  openSearch() {\r\n    this.setState({\r\n      mode: 'search',\r\n    })\r\n  }\r\n\r\n  openSlideshow() {\r\n    this.setState({\r\n      mode: 'slideshow',\r\n    });\r\n  }\r\n\r\n  openGallery() {\r\n    this.setState({\r\n      mode: 'gallery',\r\n    });\r\n  }\r\n\r\n  openSettings() {\r\n    this.setState({\r\n      mode: 'settings',\r\n    });\r\n  }\r\n\r\n  slideshowNext() {\r\n    this.state.postManager.next();\r\n    this.update();\r\n  }\r\n\r\n  slideshowPrev() {\r\n    this.state.postManager.prev();\r\n    this.update();\r\n  }\r\n\r\n  galleryViewPost(index) {\r\n    this.state.postManager.moveTo(index);\r\n    this.update();\r\n    this.setState({\r\n      mode: 'slideshow',\r\n    });\r\n  }\r\n\r\n  addToSet({\r\n    success=()=>{}, \r\n    failure=()=>{},\r\n  }={}) {\r\n    let post = this.state.postManager.getCurrentPost();\r\n    E621API.addPostToSet({\r\n      post_id: post.id,\r\n      set_id: this.state.settings.setID,\r\n      success: success,\r\n      failure: failure,\r\n    });\r\n  }\r\n\r\n  onSettingsChange(settings) {\r\n    this.setState((state) => {\r\n      return {settings: {...state.settings, ...settings}};\r\n    });\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}