{"version":3,"sources":["missing.png","helpers/Authentication.js","api/E621API.js","api/Post.js","helpers/ThrottleQueue.js","api/E621Searcher.js","components/Field.js","components/E621Filters.js","components/E621Settings.js","components/Card.js","components/Gallery.js","components/ImageCache.js","components/Slideshow.js","helpers/PostManager.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Authentication","username","apiKey","window","localStorage","setItem","removeItem","getItem","login","api_key","btoa","E621API","_client","authHeaders","tags","page","limit","success","failure","params","$","ajax","type","url","data","_getURLAddons","post_id","set_id","setTimeout","user","Post","apiJson","this","bypassDefaultBlacklist","md5","substring","fileExtension","size","extension","toLowerCase","_alternatesJson","hasOwnProperty","fileURL","group","_bypassURL","hasSample","alternateSizes","length","Object","keys","tagsInGroup","ThrottleQueue","ready","queue","fn","push","processQueue","shift","refresh","bind","E621Searcher","_page","_fetching","_finished","callback","request","fetchSuccess","add","getPosts","posts","i","Field","props","label","other","React","Component","E621Filters","handleTagsChange","handleTagsKey","search","state","className","onChange","onKeyPress","onClick","escape","e","setState","target","value","key","blur","filters","searchCallback","E621Settings","handleLocalChange","handleChange","handleSaveLogin","fetchBlacklist","userBlacklist","avoidAnonBlacklist","setID","close","name","id","checked","event","onSettingsChange","storeLogin","setBlacklist","_setBlacklist","getUser","json","Card","post","src","previewURL","alt","Gallery","openSearch","openSettings","prevPage","disabled","nextPage","getCards","cards","postManager","getAllPosts","viewPost","ImageCache","style","display","getImages","images","sampleURL","Slideshow","wrapperClassName","getSlideContents","prev","href","link","rel","next","getVideoElement","missing","width","height","poster","controls","getAlternate","PostManager","fetcher","order","currentIndex","validExtensions","Set","finished","fetch","fetchCallback","addPosts","has","isPostAllowed","index","postCount","fetchIfApplicable","allPosts","getPostByIndex","preload","postload","minimum","maximum","App","openSlideshow","openGallery","slideshowNext","slideshowPrev","keydownHandler","galleryViewPost","addToSet","mode","api","settings","currentCache","slideshowPost","which","keyCode","document","addEventListener","removeEventListener","getCachePosts","getCurrentPost","update","moveTo","addPostToSet","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f31fa25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/missing.a7a5b39c.png\";","/**\r\n * This class handles all methods for storing and reading e621\r\n * login credentials for the API\r\n */\r\nclass Authentication {\r\n  /**\r\n   * Stores the login credentials for a user.\r\n   * \r\n   * @param {string} username - The user's username\r\n   * \r\n   * @param {string} apiKey - One of the user's API keys\r\n   */\r\n  static storeLogin(username, apiKey) {\r\n    window.localStorage.setItem('username', username);\r\n    window.localStorage.setItem('api_key', apiKey);\r\n  }\r\n\r\n  /**\r\n   * Removes the currently stored user credentials.\r\n   */\r\n  static removeLogin() {\r\n    window.localStorage.removeItem('username');\r\n    window.localStorage.removeItem('api_key');\r\n  }\r\n\r\n  /**\r\n   * Gets the credentials for authenticating via URL parameters.\r\n   * This method of authentication is not recommended.\r\n   * \r\n   * @returns {AuthParams|Object} \r\n   *          The URL parameters or an empty object if not logged in\r\n   */\r\n  static get authParameters() {\r\n    var username = window.localStorage.getItem('username');\r\n    var apiKey = window.localStorage.getItem('api_key');\r\n    if (username !== null && apiKey !== null) {\r\n      return {login: username, api_key: apiKey};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the request headers for authenticating via HTTP Basic Auth.\r\n   * \r\n   * @returns {AuthHeaders|Object}\r\n   *          The headers or an empty object if not logged in\r\n   */\r\n  static get authHeaders() {\r\n    var username = window.localStorage.getItem('username');\r\n    var apiKey = window.localStorage.getItem('api_key');\r\n    if (username !== null || apiKey !== null) {\r\n      return {'Authorization': 'Basic ' + btoa(username + ':' + apiKey)};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the current users username, or null if not logged in.\r\n   * \r\n   * @returns {string|null} The username\r\n   */\r\n  static get username() {\r\n    return window.localStorage.getItem('username');\r\n  }\r\n}\r\n\r\nexport default Authentication;\r\n\r\n/**\r\n * @typedef {Object} AuthParams\r\n * @property {string} login - The user's username\r\n * @property {string} api_key - One of the user's API keys\r\n */\r\n\r\n/**\r\n * @typedef {Object} AuthHeaders\r\n * @property {string} Authorization - The HTTP basic auth credentials\r\n */\r\n","import $ from 'jquery';\r\n\r\nimport Authentication from '../helpers/Authentication';\r\n\r\n\r\nconst USER_AGENT = \"Ilm's Slideshow/2.0\";\r\n\r\n/**\r\n * This class contains methods for interfacing directly with the e621 API.\r\n */\r\nexport default class E621API {\r\n  /**\r\n   * Returns URL parameters that should be present with every request.\r\n   * This includes the user agent and login credentials.\r\n   * \r\n   * @returns {Object.<string, string>} URL parameters\r\n   */\r\n  static _getURLAddons() {\r\n    // TODO switch to HTTP Basic Auth when possible\r\n    return {\r\n      _client: USER_AGENT,\r\n      ...Authentication.authHeaders,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Gets a list of posts. Equivalent to an e621 search.\r\n   * \r\n   * @param {Object} request - The parameters of the request\r\n   * \r\n   * @param {string} request.tags\r\n   *        Follows conventions of the e621 search box\r\n   * \r\n   * @param {number|string} request.page\r\n   *        Page number, or 'b'+post_id or 'a'+post_id for posts\r\n   *        before or after a specific post\r\n   * \r\n   * @param {number|null} request.limit \r\n   *        Number of posts per page (API has hard limit of 320)\r\n   *        or null for user's default (or 75 if not logged in)\r\n   * \r\n   * @param {successCallback} request.success\r\n   *        Callback function to handle successful requests.\r\n   * \r\n   * @param {callback} request.failure\r\n   *        Callback function to handle failed requests.\r\n   */\r\n  static async getPosts({\r\n      tags='', \r\n      page=1, \r\n      limit=null, \r\n      success=()=>{}, \r\n      failure=()=>{},\r\n  }={}) {\r\n    let params = {\r\n      tags: tags,\r\n      page: page,\r\n    };\r\n    if (limit !== null) {\r\n      params['limit'] = limit;\r\n    }\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: 'https://e621.net/posts.json',\r\n      data: {\r\n        ...params,\r\n        ...E621API._getURLAddons(),\r\n      },\r\n      success: success,\r\n      failure: failure,\r\n    });\r\n  }\r\n\r\n  static async addPostToSet({\r\n    post_id=null,\r\n    set_id=null,\r\n    success=()=>{}, \r\n    failure=()=>{},\r\n  }={}) {\r\n    if (post_id === null || set_id === null) {\r\n      setTimeout(() => { failure(); }, 0);\r\n      return;\r\n    }\r\n    let params = {\r\n      'post_ids[]': post_id,\r\n    };\r\n    $.ajax({\r\n      type: 'POST',\r\n      url: 'https://e621.net/post_sets/' + set_id + '/add_posts.json',\r\n      data: {\r\n        ...params,\r\n        ...E621API._getURLAddons(),\r\n      },\r\n      success: success,\r\n      failure: failure,\r\n    });\r\n  }\r\n\r\n  static async getUser({\r\n    user,\r\n    success=()=>{}, \r\n    failure=()=>{},\r\n  }={}) {\r\n    if (!user) {\r\n      setTimeout(() => { failure(); }, 0);\r\n      return;\r\n    }\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: 'https://e621.net/users/' + user + '.json',\r\n      data: E621API._getURLAddons(),\r\n      success: success,\r\n      failure: failure,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Callback function for successful API calls.\r\n * @callback successCallback\r\n * @param {Object} data - The JSON response from the API call\r\n */\r\n","/**\r\n * A wrapper class for posts from the e621 API.\r\n */\r\nexport default class Post {\r\n  /**\r\n   * When true, contentURL, previewURL, and sampleURL will ignore\r\n   * e621's anon blacklist and return their proper URLs.\r\n   */\r\n  static bypassDefaultBlacklist = true;\r\n\r\n  /**\r\n   * Returns the URL for a resource if bypassDefaultBlacklist is true. \r\n   * \r\n   * @param {string} type\r\n   *        '' for file, 'preview/' for preview, 'sample/' for sample\r\n   * \r\n   * @returns {string|null} \r\n   *          The resource URL, or null if bypassDefaultBlacklist is false\r\n   */\r\n  _bypassURL(type) {\r\n    if (!Post.bypassDefaultBlacklist) return null;\r\n    let f1 = this.md5.substring(0, 2);\r\n    let f2 = this.md5.substring(2, 4);\r\n    return 'https://static1.e621.net/data/' + type + f1 + '/' + f2 + \r\n            '/' + this.md5 +'.' + (type !== '' ? 'jpg' : this.fileExtension);\r\n  }\r\n\r\n  /**\r\n   * Creates a Post object from a JSON API result.\r\n   * \r\n   * @param {JSON} post - A single post from the API\r\n   */\r\n  constructor(apiJson) {\r\n    this.apiJson = apiJson;\r\n  }\r\n\r\n  /**\r\n   * The URL linking to the post on e621.net.\r\n   * \r\n   * @type {string} \r\n   */\r\n  get link() {\r\n    return 'https://e621.net/posts/' + this.apiJson['id'];\r\n  }\r\n\r\n  /**\r\n   * The id of the post.\r\n   * \r\n   * @type {number} \r\n   */\r\n  get id() {\r\n    return this.apiJson['id'];\r\n  }\r\n\r\n  /**\r\n   * The MD5 of the file.\r\n   * \r\n   * @type {string}\r\n   */\r\n  get md5() {\r\n    return this.apiJson['file']['md5'];\r\n  }\r\n\r\n  /**\r\n   * The width of the full size file.\r\n   * \r\n   * @type {number}\r\n   */\r\n  get width() {\r\n    return this.apiJson['file']['width'];\r\n  }\r\n\r\n  /**\r\n   * The height of the full size file.\r\n   * \r\n   * @type {number}\r\n   */\r\n  get height() {\r\n    return this.apiJson['file']['height'];\r\n  }\r\n\r\n  /**\r\n   * The size of the original file in bytes.\r\n   * \r\n   * @type {number}\r\n   */\r\n  get fileSize() {\r\n    return this.apiJson['file']['size'];\r\n  }\r\n\r\n  /**\r\n   * The file extension for the full image, video, or flash file.\r\n   * \r\n   * @type {string} \r\n   */\r\n  get fileExtension() {\r\n    return this.apiJson['file']['ext'];\r\n  }\r\n\r\n  /**\r\n   * True when the post is blocked by the anon blacklist.\r\n   * \r\n   * @type {boolean}\r\n   */\r\n  get isBlocked() {\r\n    return this.apiJson['file']['url'] === null;\r\n  }\r\n\r\n  /**\r\n   * The URL for the post's file (full image, original video, or flash file),\r\n   * or null when the post is blocked by the anon blacklist.\r\n   * \r\n   * @type {string|null} \r\n   */\r\n  get fileURL() {\r\n    return this.apiJson['file']['url'] || this._bypassURL('');\r\n  }\r\n\r\n  /**\r\n   * The URL for the post's preview image,\r\n   * or null when the post is blocked by the anon blacklist.\r\n   * \r\n   * All preivews are limited to 150px for width and height.\r\n   * \r\n   * Images have a scaled preview of their original image.\r\n   * Videos have a scaled preview of the first frame.\r\n   * Flash files have a square white image that says 'Flash'.\r\n   * \r\n   * @type {string|null} \r\n   */\r\n  get previewURL() {\r\n    return this.apiJson['preview']['url'] || \r\n            (this.fileExtension === 'swf' ? \r\n              'https://static1.e621.net/images/download-preview.png' : \r\n              this._bypassURL('preview/'));\r\n  }\r\n\r\n  /**\r\n   * True when the post has a sample.\r\n   * \r\n   * @type {boolean} \r\n   */\r\n  get hasSample() {\r\n    return this.apiJson['sample']['has'];\r\n  }\r\n\r\n  /**\r\n   * The URL for the post's sample image,\r\n   * or null when the post is blocked by the anon blacklist.\r\n   * \r\n   * Posts that dont have a sample will return the original file.\r\n   * \r\n   * Images:\r\n   * - Have a preview when full image width excedes 850px.\r\n   * - Preview image is scaled to 850px width.\r\n   * \r\n   * Videos:\r\n   * - Always have previews\r\n   * - Preview image is full scale of first frame.\r\n   * \r\n   * Flash:\r\n   * - Never have previews\r\n   * \r\n   * @type {string|null} \r\n   */\r\n  get sampleURL() {\r\n    return this.apiJson['sample']['url'] || \r\n            this._bypassURL(this.hasSample === true ? 'sample/' : '');\r\n  }\r\n\r\n  /**\r\n   * True when the post has alternate files.\r\n   * \r\n   * @return {boolean}\r\n   */\r\n  get hasAlternates() {\r\n    return this.alternateSizes.length;\r\n  }\r\n\r\n  /**\r\n   * The alternates part of the JSON.\r\n   * \r\n   * @returns {JSON}\r\n   */\r\n  get _alternatesJson() {\r\n    return this.apiJson['sample']['alternates'];\r\n  }\r\n\r\n  /**\r\n   * Array of available alternate file sizes.\r\n   * \r\n   * For videos, the options are:\r\n   * - 'original': The original resolution\r\n   * - '480p': 480p if the original is larger\r\n   * - '720p': 720p if the original is larger\r\n   * \r\n   * @returns {Array.<string>}\r\n   */\r\n  get alternateSizes() {\r\n    return Object.keys(this._alternatesJson);\r\n  }\r\n\r\n  /**\r\n   * Returns the URL for the alternate of the specified size and file type.\r\n   * \r\n   * @param {string} size\r\n   *        The size of the alternate.\r\n   *        \r\n   *        For videos this should be:\r\n   *        - 'original': The original resolution\r\n   *        - '480p': 480p if the original is larger\r\n   *        - '720p': 720p if the original is larger\r\n   * \r\n   * @param {string} extension \r\n   *        The file extension of the alternate \r\n   * \r\n   * @returns {string|null} \r\n   *          The URL to the alternate, or null if not found.\r\n   */\r\n  getAlternate(size, extension) {\r\n    size = size.toLowerCase();\r\n    extension = extension.toLowerCase();\r\n    if (!this._alternatesJson.hasOwnProperty(size)) {\r\n      return null;\r\n    }\r\n    switch (extension) {\r\n      case 'webm':\r\n        return this._alternatesJson[size]['urls'][0] || this.fileURL;\r\n      case 'mp4':\r\n        return this._alternatesJson[size]['urls'][1] || this.fileURL;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The post's score.\r\n   * \r\n   * @returns {number} The score\r\n   */\r\n  get score() {\r\n    return this.apiJson['score']['total'];\r\n  }\r\n\r\n  /**\r\n   * The number of upvotes on the post.\r\n   * \r\n   * @returns {number} The number of upvotes\r\n   */\r\n  get upvotes() {\r\n    return this.apiJson['score']['up'];\r\n  }\r\n\r\n  /**\r\n   * The number of downvotes on the post.\r\n   * \r\n   * @returns {number} The number of downvotes\r\n   */\r\n  get downvotes() {\r\n    return this.apiJson['score']['down'];\r\n  }\r\n\r\n  /**\r\n   * The rating of the post.\r\n   *  - 's': safe\r\n   *  - 'q': questionable\r\n   *  - 'e': explicit\r\n   * \r\n   * @returns {string} A letter representing the rating\r\n   */\r\n  get rating() {\r\n    return this.apiJson['rating'];\r\n  }\r\n\r\n  /**\r\n   * Array of tags on the post.\r\n   * \r\n   * The order of these tags will match those listed on e621.net,\r\n   * with the exception of invalid tags which are moved to the end.\r\n   * \r\n   * @returns {Array.<string>}\r\n   */\r\n  get tags() {\r\n    return [\r\n      ...this.tagsInGroup('artist'),\r\n      ...this.tagsInGroup('copyright'),\r\n      ...this.tagsInGroup('character'),\r\n      ...this.tagsInGroup('species'),\r\n      ...this.tagsInGroup('general'),\r\n      ...this.tagsInGroup('meta'),\r\n      ...this.tagsInGroup('lore'),\r\n      ...this.tagsInGroup('invalid'),\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns array of tags in a specific group, or null for invalid groups.\r\n   * \r\n   * Groups names are dependent on the API.\r\n   * \r\n   * Current Groups:\r\n   * - artist\r\n   * - copyright\r\n   * - character\r\n   * - species\r\n   * - general\r\n   * - meta\r\n   * - lore\r\n   * - invalid\r\n   * \r\n   * @returns {Array.<string>|null}\r\n   */\r\n  getTagsInGroup(group) {\r\n    if (!this.apiJson['tags'].hasOwnProperty(group)) {\r\n      return null;\r\n    }\r\n    return this.apiJson['tags'][group];\r\n  }\r\n\r\n  /**\r\n   * The number of favorites for the post.\r\n   * \r\n   * @returns {number} The number of favorites\r\n   */\r\n  get favCount() {\r\n    return this.apiJson['fav_count']; \r\n  }\r\n\r\n  /**\r\n   * The sources of the post.\r\n   * \r\n   * @returns {Array.<string>} Array of URLs\r\n   */\r\n  get sources() {\r\n    return this.apiJson['sources'];\r\n  }\r\n\r\n  /**\r\n   * Array of pool IDs that contain this post.\r\n   * \r\n   * @returns {Array.<number>} Array of pool IDs\r\n   */\r\n  get poolIDs() {\r\n    return this.apiJson['pools'];\r\n  }\r\n\r\n  /**\r\n   * The ID of the parent post, or null if no parent.\r\n   * \r\n   * @returns {number|null} The parent post ID\r\n   */\r\n  get parentID() {\r\n    return this.apiJson['relationships']['parent_id'];\r\n  }\r\n\r\n  /**\r\n   * True when the post has children (including deleted child posts).\r\n   * \r\n   * @returns {boolean} Whether or not the post has children\r\n   */\r\n  get hasChildren() {\r\n    return this.apiJson['relationships']['has_children'];\r\n  }\r\n\r\n  /**\r\n   * True when the post has non-deleted children.\r\n   * \r\n   * @returns {boolean} Whether or not the post has children\r\n   */\r\n  get hasActiveChildren() {\r\n    return this.apiJson['relationships']['has_active_children'];\r\n  }\r\n\r\n  /**\r\n   * Array of child post IDs.\r\n   * \r\n   * @returns {Array.<number>} Array of child post IDs\r\n   */\r\n  get childIDs() {\r\n    return this.apiJson['relationships']['children'];\r\n  }\r\n\r\n  /**\r\n   * Returns the description of the post.\r\n   * \r\n   * @returns {string} The post description\r\n   */\r\n  get description() {\r\n    return this.apiJson['description']\r\n  }\r\n\r\n  /**\r\n   * The number of comments on the post.\r\n   * \r\n   * @returns {number} Number of comments\r\n   */\r\n  get commentCount() {\r\n    return this.apiJson['comment_count'];\r\n  }\r\n\r\n  /**\r\n   * True when the current user has favorited the post.\r\n   * \r\n   * @returns {boolean} Whether or not the post is favorited\r\n   */\r\n  get favorited() {\r\n    return this.apiJson['is_favorited'];\r\n  }\r\n\r\n  /**\r\n   * Duration of the video in seconds, or null for non-videos.\r\n   * \r\n   * @returns {number|null} Duration of video in seconds\r\n   */\r\n  get duration() {\r\n    return this.apiJson['duration'];\r\n  }\r\n}\r\n","// Allows functions to be called at a throttled rate\r\nexport class ThrottleQueue {\r\n  constructor (limit = 1000) {\r\n    this.limit = limit;\r\n    this.ready = true;\r\n    this.queue = [];\r\n  }\r\n\r\n  // Adds a function to the queue\r\n  add(fn) {\r\n    this.queue.push(fn);\r\n    this.processQueue();\r\n  }\r\n\r\n  // Calls the oldest function from the queue, if one exists \r\n  processQueue() {\r\n    if (this.queue.length > 0 && this.ready) {\r\n      this.ready = false;\r\n      this.queue.shift()();\r\n      setTimeout(this.refresh.bind(this), this.limit);\r\n    }\r\n  }\r\n\r\n  // Called when the cooldown finishes, processes next function\r\n  refresh() {\r\n    this.ready = true;\r\n    this.processQueue();\r\n  }\r\n}\r\n\r\nexport default ThrottleQueue;\r\n","import E621API from './E621API';\r\nimport Post from './Post';\r\nimport ThrottleQueue from '../helpers/ThrottleQueue';\r\n\r\n\r\n/**\r\n * This class \r\n */\r\nexport default class E621Searcher {\r\n  static queue = new ThrottleQueue(1000);\r\n\r\n  constructor(tags) {\r\n    this.tags = tags;\r\n    this.limit = 50;\r\n    this._page = 1;\r\n    this._fetching = false;\r\n    this._finished = false;\r\n  }\r\n\r\n  fetch(callback) {\r\n    if (this._finished === true) {\r\n      setTimeout(() => { callback([]); }, 0);\r\n      return true;\r\n    } else if (this._fetching === true) {\r\n      return false;\r\n    } else {\r\n      this._fetching = true;\r\n      let request = {\r\n        tags: this.tags,\r\n        page: this._page,\r\n        limit: this.limit,\r\n        success: this.fetchSuccess.bind(this, callback),\r\n      }\r\n      E621Searcher.queue.add(function() {\r\n        E621API.getPosts(request);\r\n      });\r\n      this._page++;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  fetchSuccess(callback, data) {\r\n    this._fetching = false;\r\n    if (data['posts'].length === 0) {\r\n      this._finished = true;\r\n      callback([]);\r\n    } else {\r\n      let posts = [];\r\n      for (let i = 0; i < data['posts'].length; ++i) {\r\n        posts.push(new Post(data['posts'][i]));\r\n      }\r\n      callback(posts);\r\n    }\r\n  }\r\n\r\n  get finished() {\r\n    return this._finished;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nclass Field extends React.Component {\r\n  render() {\r\n    let {label, ...other} = this.props;\r\n    return (\r\n      <>\r\n        <h2>{label}</h2>\r\n        <input {...other} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\n\r\nimport Field from './Field';\r\n\r\nimport './E621Filters.css';\r\n\r\n\r\nclass E621Filters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTagsChange = this.handleTagsChange.bind(this);\r\n    this.handleTagsKey = this.handleTagsKey.bind(this);\r\n    this.search = this.search.bind(this);\r\n    // TODO fix fields not filling with old data\r\n    this.state = {tags: ''};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form filter-form\">\r\n        <Field label=\"Tags\" type=\"text\" \r\n               onChange={this.handleTagsChange} \r\n               onKeyPress={this.handleTagsKey} />\r\n        <button onClick={this.search}>\r\n          Search\r\n        </button>\r\n        <button onClick={this.props.escape}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleTagsChange(e) {\r\n    this.setState({ tags: e.target.value });\r\n  }\r\n\r\n  handleTagsKey(e) {\r\n    if (e.key === 'Enter') {\r\n      e.target.blur();\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  search() {\r\n    let filters = {\r\n      tags: this.state.tags\r\n    };\r\n    this.props.searchCallback(filters);\r\n  }\r\n}\r\n\r\nexport default E621Filters;\r\n","import React from 'react';\r\nimport Authentication from '../helpers/Authentication';\r\n\r\nimport E621API from '../api/E621API';\r\nimport Field from './Field';\r\n\r\n\r\nclass E621Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLocalChange = this.handleLocalChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSaveLogin = this.handleSaveLogin.bind(this);\r\n    this.fetchBlacklist = this.fetchBlacklist.bind(this);\r\n    this.state = {\r\n      username: '',\r\n      apiKey: '',\r\n      userBlacklist: '',\r\n      avoidAnonBlacklist: false,\r\n      setID: '',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form settings-form\">\r\n        <button onClick={this.props.close}>\r\n          Close Settings\r\n        </button>\r\n        <Field label=\"Username\" type=\"text\" \r\n               name=\"username\" value={this.state.username}\r\n               onChange={this.handleLocalChange} />\r\n        <Field label=\"API Key\" type=\"password\" \r\n               name=\"apiKey\" value={this.state.apiKey}\r\n               onChange={this.handleLocalChange} />\r\n        <button id=\"e621-save-login-button\" onClick={this.handleSaveLogin}>\r\n          Store Login Locally\r\n        </button>\r\n        <Field label=\"Avoid Anon Blacklist\" type=\"checkbox\" \r\n               name=\"avoidAnonBlacklist\" checked={this.state.avoidAnonBlacklist}\r\n               onChange={this.handleChange} />\r\n        <h2>Blacklist</h2>\r\n        <button id=\"fetch-user-blacklist-button\" onClick={this.fetchBlacklist}>\r\n          Get blacklist\r\n        </button>\r\n        <textarea name=\"userBlacklist\" value={this.state.userBlacklist}\r\n               onChange={this.handleChange} />\r\n        <Field label=\"Set ID\" type=\"text\" \r\n               name=\"setID\" value={this.state.setID}\r\n               onChange={this.handleChange} />\r\n        <button onClick={this.props.close}>\r\n          Close Settings\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleLocalChange(event) {\r\n    let target = event.target;\r\n    let value = target.type === 'checkbox' ? target.checked : target.value;\r\n    this.setState({[target.name]: value});\r\n  }\r\n\r\n  handleChange(event) {\r\n    let target = event.target;\r\n    let value = target.type === 'checkbox' ? target.checked : target.value;\r\n    this.setState({[target.name]: value});\r\n    this.props.onSettingsChange({[target.name]: value});\r\n  }\r\n\r\n  handleSaveLogin() {\r\n    Authentication.storeLogin(this.state.username, this.state.apiKey);\r\n    this.setState({ username: '', apiKey: '' });\r\n  }\r\n\r\n  fetchBlacklist() {\r\n    let setBlacklist = this._setBlacklist.bind(this);\r\n    let username = Authentication.username;\r\n    E621API.getUser({\r\n      user: username,\r\n      success: (json) => {\r\n        if (json.hasOwnProperty('blacklist')) {\r\n          setBlacklist(json['blacklist']);\r\n        } else {\r\n          setBlacklist('(error_not_logged_in:' + username + ')');\r\n        }\r\n      },\r\n      failure: () => {\r\n        setBlacklist('(error_invalid_user:' + username + ')');\r\n      },\r\n    });\r\n  }\r\n\r\n  _setBlacklist(value) {\r\n    this.setState({userBlacklist: value});\r\n  }\r\n}\r\n\r\nexport default E621Settings;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n    let className = 'card';\r\n    className += ' content-type-' + this.props.post.fileExtension;\r\n    return (\r\n      <div className={className}>\r\n        <button onClick={this.props.callback}>\r\n          <img src={this.props.post.previewURL} alt=\"\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nimport './Gallery.css';\r\n\r\n\r\nclass Gallery extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"gallery\">\r\n        <div className=\"gallery-controls\">\r\n          <button onClick={this.props.openSearch}>Search</button>\r\n          <button onClick={this.props.openSettings}>Settings</button>\r\n        </div>\r\n        <div className=\"gallery-controls\">\r\n          <button onClick={this.props.prevPage} disabled={!this.props.prevPage}>Prev Page</button>\r\n          <button onClick={this.props.nextPage} disabled={!this.props.nextPage}>Next Page</button>\r\n        </div>\r\n        <div className=\"gallery-content\">\r\n          {this.getCards()}\r\n        </div>\r\n        <div className=\"gallery-controls\">\r\n          <button onClick={this.props.prevPage} disabled={!this.props.prevPage}>Prev Page</button>\r\n          <button onClick={this.props.nextPage} disabled={!this.props.nextPage}>Next Page</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getCards() {\r\n    let cards = [];\r\n    if (this.props.postManager) {\r\n      let posts = this.props.postManager.getAllPosts();\r\n      for (let i = 0; i < posts.length; i++) {\r\n        cards.push(\r\n          <Card key={posts[i].id}\r\n                post={posts[i]} \r\n                callback={() => {this.props.viewPost(i)}} />\r\n        );\r\n      }\r\n    }\r\n    return cards;\r\n  }\r\n}\r\n\r\nexport default Gallery\r\n","import React from 'react';\r\n\r\n\r\nexport class ImageCache extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{display: \"none\"}}>\r\n        {this.getImages(this.props.posts)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getImages(posts) {\r\n    let images = [];\r\n    for (let i = 0; i < posts.length; i++) {\r\n      images.push(<img key={posts[i].id} alt=\"\"\r\n        src={posts[i].fileExtension === 'webm' ? \r\n              posts[i].sampleURL : posts[i].fileURL}/>)\r\n    }\r\n    return images;\r\n  }\r\n}\r\n\r\nexport default ImageCache;\r\n","import React from 'react';\r\n\r\nimport './Slideshow.css';\r\nimport missing from '../missing.png';\r\n\r\n\r\nexport class Slideshow extends React.Component {\r\n  render() {\r\n    let wrapperClassName = 'slide-wrapper';\r\n    if (this.props.post) {\r\n      wrapperClassName += ' content-type-' + this.props.post.fileExtension;\r\n    }\r\n    return (\r\n      <div className={wrapperClassName}>\r\n        <div className=\"slide\">\r\n          {this.getSlideContents()}\r\n        </div>\r\n        <div className=\"slide-controls\">\r\n          <button className=\"prev-button\" onClick={this.props.prev}>Previous</button>\r\n          <button className=\"escape-button\" onClick={this.props.escape}>Close</button>\r\n          <a className=\"source-button\" href={this.props.post ? this.props.post.link : null} \r\n             target=\"_blank\" rel=\"noopener noreferrer\">Link</a>\r\n          <button className=\"next-button\" onClick={this.props.next}>Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getSlideContents() {\r\n    if (this.props.post) {\r\n      switch(this.props.post.fileExtension) {\r\n        case 'jpg':\r\n        case 'png':\r\n        case 'gif':\r\n          return <img className=\"current-image\" key={this.props.post.id}\r\n                      src={this.props.post.fileURL} alt=\"\" />;\r\n        case 'webm':\r\n          return this.getVideoElement();\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return <img className=\"current-image\" src={missing} alt=\"\" />;\r\n  }\r\n\r\n  getVideoElement() {\r\n    return (\r\n      <video className=\"current-video\" key={this.props.post.id}\r\n             width={this.props.post.width}\r\n             height={this.props.post.height} \r\n             poster={this.props.post.sampleURL} controls>\r\n        <source src={this.props.post.getAlternate('original', 'webm')} \r\n                type=\"video/webm\" />\r\n        <source src={this.props.post.getAlternate('original', 'mp4')} \r\n                type=\"video/mp4\" />\r\n        Your browser does not support the video tag, \r\n        or cannot handle webm or mp4 files.\r\n      </video>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slideshow;\r\n","export class PostManager {\r\n  constructor(fetcher) {\r\n    this.fetcher = fetcher;\r\n    this.posts = {};\r\n    this.order = [];\r\n    this.currentIndex = null;\r\n    // TODO manage extensions per platform\r\n    // e621Extensions = new Set(['png','jpg','gif'])\r\n    // faExtensions = new Set(['png','jpg','jpeg','gif','bmp'])\r\n    this.validExtensions = new Set(['png','jpg','gif','webm']);\r\n  }\r\n\r\n  empty() {\r\n    this.posts = {};\r\n    this.order = [];\r\n    this.currentIndex = null;\r\n  }\r\n\r\n  fetchIfApplicable(callback) {\r\n    if (this.fetcher.finished === false &&\r\n        (this.currentIndex === null ||\r\n         this.order.length - this.currentIndex < 20)) {\r\n      this.fetcher.fetch(this.fetchCallback.bind(this, callback));\r\n    }\r\n  }\r\n\r\n  fetchCallback(callback, posts) {\r\n    if (posts.length === 0) {\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n    } else {\r\n      this.addPosts(posts);\r\n      if (callback) {\r\n        callback(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  isPostAllowed(post) {\r\n    return this.validExtensions.has(post.fileExtension);\r\n  }\r\n\r\n  addPosts(posts) {\r\n    for (let i = 0; i < posts.length; i++) {\r\n      let post = posts[i];\r\n      if (this.isPostAllowed(post)) {\r\n        this.posts[post.id] = post;\r\n        this.order.push(post.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  moveToStart() {\r\n    this.currentIndex = 0;\r\n  }\r\n\r\n  moveTo(index) {\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  next() {\r\n    if (this.currentIndex !== null) {\r\n      this.currentIndex++;\r\n      var postCount = this.order.length\r\n      if (this.currentIndex >= postCount){\r\n        if (postCount > 0) {\r\n          this.currentIndex = postCount - 1;\r\n        } else {\r\n          this.currentIndex = 0;\r\n        }\r\n        return false;\r\n      }\r\n      this.fetchIfApplicable();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    if (this.currentIndex !== null) {\r\n      this.currentIndex--;\r\n      if (this.currentIndex < 0){\r\n        this.currentIndex = 0;\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  getPostById(id) {\r\n    return this.posts[id];\r\n  }\r\n\r\n  getPostByIndex(index) {\r\n    return this.posts[this.order[index]];\r\n  }\r\n\r\n  getAllPosts() {\r\n    let allPosts = [];\r\n    for (let i = 0; i < this.order.length; i++) {\r\n      allPosts.push(this.posts[this.order[i]]);\r\n    }\r\n    return allPosts;\r\n  }\r\n\r\n  getCurrentPost() {\r\n    return this.currentIndex !== null ? this.getPostByIndex(this.currentIndex) : null;\r\n  }\r\n\r\n  getCachePosts(preload, postload) {\r\n    let posts = [];\r\n    if (this.currentIndex !== null) {\r\n      let minimum = this.currentIndex - postload;\r\n      let maximum = this.currentIndex + preload;\r\n      if (minimum < 0) {\r\n          minimum = 0;\r\n      }\r\n      if (maximum >= this.order.length) {\r\n          maximum = this.order.length - 1;\r\n      }\r\n      for (let i = minimum; i <= maximum; i++) {\r\n          posts.push(this.getPostByIndex(i));\r\n      }\r\n    }\r\n    return posts;\r\n  }\r\n}\r\n\r\nexport default PostManager;\r\n","import React from 'react';\n\nimport E621API from '../api/E621API';\nimport E621Searcher from '../api/E621Searcher';\nimport E621Filters from './E621Filters';\nimport E621Settings from './E621Settings';\nimport Gallery from './Gallery';\nimport ImageCache from './ImageCache';\nimport Slideshow from './Slideshow';\nimport PostManager from '../helpers/PostManager';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.search = this.search.bind(this);\n    this.searchCallback = this.searchCallback.bind(this);\n    this.openSlideshow = this.openSlideshow.bind(this);\n    this.openGallery = this.openGallery.bind(this);\n    this.slideshowNext = this.slideshowNext.bind(this);\n    this.slideshowPrev = this.slideshowPrev.bind(this);\n    this.keydownHandler = this.keydownHandler.bind(this);\n    this.openSearch = this.openSearch.bind(this);\n    this.openSettings = this.openSettings.bind(this);\n    this.galleryViewPost = this.galleryViewPost.bind(this);\n    this.addToSet = this.addToSet.bind(this);\n    this.onSettingsChange = this.onSettingsChange.bind(this);\n    this.state = {\n      mode: 'search',\n      api: 'e621',\n      settings: {},\n      currentCache: [],\n      slideshowPost: null,\n      posts: [],\n      postManager: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div className={this.state.mode === 'search' ? 'mount show' : 'mount'}>\n          <E621Filters searchCallback={this.search} \n                       escape={this.openGallery} />\n        </div>\n        <div className={this.state.mode === 'slideshow' ? 'mount show' : 'mount'}>\n          <Slideshow post={this.state.slideshowPost}\n                     next={this.slideshowNext}\n                     prev={this.slideshowPrev}\n                     escape={this.openGallery}\n                     addToSet={this.addToSet} />\n        </div>\n        <div className={this.state.mode === 'gallery' ? 'mount show' : 'mount'}>\n          <Gallery postManager={this.state.postManager}\n                   openSearch={this.openSearch}\n                   openSettings={this.openSettings}\n                   viewPost={this.galleryViewPost} />\n        </div>\n        <div className={this.state.mode === 'settings' ? 'mount show' : 'mount'}>\n          <E621Settings close={this.openGallery} \n                        onSettingsChange={this.onSettingsChange} />\n        </div>\n        <ImageCache posts={this.state.currentCache} />\n      </>\n    );\n  }\n\n  keydownHandler(e) {\n    if (this.state.mode === 'slideshow') {\n      var key = e.which || e.keyCode;\n      \n      switch (key) {\n        case 37: // Left arrow\n        case 65: // A\n          this.slideshowPrev();\n          return;\n        case 39: // Right arrow\n        case 68: // D\n          this.slideshowNext();\n          return;\n        default: return;\n      }\n    }\n  }\n  \n  componentDidMount() { \n    document.addEventListener('keydown', this.keydownHandler);\n  }\n\n  componentWillUnmount() { \n    document.removeEventListener('keydown', this.keydownHandler);\n  }\n\n  search(filters) {\n    // TODO pass proper settings\n    let settings = {limit: 60};\n    let postManager = new PostManager(new E621Searcher(filters.tags, settings.limit));\n    postManager.fetchIfApplicable(this.searchCallback);\n    this.setState({\n      mode: 'gallery',\n      postManager: postManager,\n    });\n  }\n\n  update() {\n    // TODO configure cache size with settings\n    this.setState({\n      posts: this.state.postManager.getAllPosts(),\n      currentCache: this.state.postManager.getCachePosts(10, 5),\n      slideshowPost: this.state.postManager.getCurrentPost(),\n    });\n  }\n\n  searchCallback() {\n    this.update();\n  }\n\n  openSearch() {\n    this.setState({\n      mode: 'search',\n    })\n  }\n\n  openSlideshow() {\n    this.setState({\n      mode: 'slideshow',\n    });\n  }\n\n  openGallery() {\n    this.setState({\n      mode: 'gallery',\n    });\n  }\n\n  openSettings() {\n    this.setState({\n      mode: 'settings',\n    });\n  }\n\n  slideshowNext() {\n    this.state.postManager.next();\n    this.update();\n  }\n\n  slideshowPrev() {\n    this.state.postManager.prev();\n    this.update();\n  }\n\n  galleryViewPost(index) {\n    this.state.postManager.moveTo(index);\n    this.update();\n    this.setState({\n      mode: 'slideshow',\n    });\n  }\n\n  addToSet() {\n    let post = this.state.postManager.getCurrentPost();\n    E621API.addPostToSet({\n      post_id: post.id,\n      set_id: this.settings.setID\n    });\n  }\n\n  onSettingsChange(settings) {\n    this.setState((state) => {\n      return {settings: {...state.settings, ...settings}};\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}